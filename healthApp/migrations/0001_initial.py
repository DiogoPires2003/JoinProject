# Generated by Django 4.2.20 on 2025-04-16 11:12

import datetime
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='El nombre debe contener solo letras', regex='^[A-Za-z\\s]+$')])),
                ('last_name', models.CharField(max_length=50, validators=[django.core.validators.RegexValidator(message='El apellido debe contener solo letras', regex='^[A-Za-z\\s]+$')])),
                ('dni', models.CharField(max_length=9, unique=True, validators=[django.core.validators.RegexValidator(message='El DNI debe tener 8 dígitos seguidos de una letra', regex='^\\d{8}[A-Z]$')])),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(max_length=9, validators=[django.core.validators.RegexValidator(message='El número de teléfono debe tener 9 dígitos', regex='^\\d{9}$')])),
                ('has_insurance', models.BooleanField(default=False)),
                ('insurance_number', models.CharField(blank=True, error_messages={'blank': 'El número de seguro no puede estar en blanco.', 'null': 'El número de seguro no puede estar vacío.', 'unique': 'Ya existe un paciente con este número de seguro.'}, max_length=12, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='El número de seguro debe comenzar con una letra seguida de 5 dígitos.', regex='^[A-Za-z]\\d{5}$')])),
                ('password', models.CharField(max_length=128, validators=[django.core.validators.MinLengthValidator(8, message='La contraseña debe tener al menos 8 caracteres.')])),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'verbose_name': 'Service',
                'verbose_name_plural': 'Services',
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now)),
                ('start_hour', models.TimeField(default=datetime.time(9, 0))),
                ('end_hour', models.TimeField(default=datetime.time(10, 0))),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='healthApp.patient')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='healthApp.service')),
            ],
            options={
                'verbose_name': 'Appointment',
                'verbose_name_plural': 'Appointments',
                'unique_together': {('patient', 'date', 'start_hour', 'end_hour')},
            },
        ),
    ]
